// <auto-generated />
using API.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace API.Migrations
{
    [DbContext(typeof(AMContext))]
    partial class AMContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API.Entities.AM_Application", b =>
                {
                    b.Property<int>("AppID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppMemberName");

                    b.Property<string>("AppName");

                    b.Property<int>("Status");

                    b.HasKey("AppID");

                    b.ToTable("AM_Applications");
                });

            modelBuilder.Entity("API.Entities.AM_AppRoleService", b =>
                {
                    b.Property<int>("AppRoleID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AppID");

                    b.Property<int>("RoleID");

                    b.Property<int>("ServiceID");

                    b.HasKey("AppRoleID");

                    b.ToTable("AM_AppRoleServices");
                });

            modelBuilder.Entity("API.Entities.AM_Attribute", b =>
                {
                    b.Property<int>("AttribID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AttribDesc");

                    b.Property<string>("AttribName");

                    b.HasKey("AttribID");

                    b.ToTable("AM_Attributes");
                });

            modelBuilder.Entity("API.Entities.AM_InheritedRole", b =>
                {
                    b.Property<int>("InheritedRolesID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AppRoleServiceID");

                    b.HasKey("InheritedRolesID");

                    b.ToTable("AM_InheritedRoles");
                });

            modelBuilder.Entity("API.Entities.AM_Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("RoleName");

                    b.HasKey("RoleID");

                    b.ToTable("AM_Roles");
                });

            modelBuilder.Entity("API.Entities.AM_Service", b =>
                {
                    b.Property<int>("ServiceID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AppID");

                    b.Property<string>("ServiceDesc");

                    b.Property<string>("ServiceName");

                    b.HasKey("ServiceID");

                    b.ToTable("AM_Services");
                });

            modelBuilder.Entity("API.Entities.AM_ServiceAttribute", b =>
                {
                    b.Property<int>("ServiceAttributeID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AttribID");

                    b.Property<int>("ServiceID");

                    b.HasKey("ServiceAttributeID");

                    b.ToTable("AM_ServiceAttributes");
                });

            modelBuilder.Entity("API.Entities.AM_User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Status");

                    b.Property<string>("UserName");

                    b.HasKey("UserID");

                    b.ToTable("AM_Users");
                });

            modelBuilder.Entity("API.Entities.AM_UserApp", b =>
                {
                    b.Property<int>("UserAppID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AppID");

                    b.Property<int>("UserID");

                    b.HasKey("UserAppID");

                    b.ToTable("AM_UserApps");
                });

            modelBuilder.Entity("API.Entities.AM_UserAppRoleService", b =>
                {
                    b.Property<int>("UserAppRoleServiceID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AppRoleServiceID");

                    b.Property<int>("UserAppID");

                    b.HasKey("UserAppRoleServiceID");

                    b.ToTable("AM_UserAppRoleServices");
                });
#pragma warning restore 612, 618
        }
    }
}
